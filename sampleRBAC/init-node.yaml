apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: init-node-cr
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: init-node-sa
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: init-node-cr
subjects:
- kind: ServiceAccount
  name: init-node-sa
  namespace: default
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: init-node-sa
  namespace: default
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: add-label
spec:
  selector:
    matchLabels:
      name: add-label
  template:
    metadata:
      labels:
        name: add-label
    spec:
      hostPID: true
      hostNetwork: true
      serviceAccount: init-node-sa
      containers: 
      - name: add-label
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        command:
        - sh
        - -c
        - |
          kubectl label node "$NODE_NAME" "node-role.kubernetes.io/role=testing"
          while true; do sleep 60; done
        image: alpine/k8s:1.28.0
        resources:
          requests:
            cpu: 50m
            memory: 50M
        securityContext:
          runAsUser: 0
          privileged: true
